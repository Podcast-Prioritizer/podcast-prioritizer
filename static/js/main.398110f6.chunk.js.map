{"version":3,"sources":["styles/assets/nounAngry.png","styles/assets/cyclist.png","styles/assets/pedestrian.png","styles/assets/logo.png","Header.js","MapQuestSearch.js","readableTime.js","CommuteSidebar.js","Podcast.js","ComparisonResults.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","title","Component","MapQuestSearch","displayMap","userStart","userEnd","Axios","url","params","key","props","apiKey","format","start","end","size","zoom","routeColor","routeArc","then","data","mapProp","request","responseURL","getMapInfo","event","preventDefault","all","makeAxiosCallBike","refs","value","userDestination","makeAxiosCallWalk","responseArray","returnLocationInfo","route","locations","locationObject","startAddress","street","startCity","adminArea5","endAddress","endCity","formattedBikeSeconds","formattedTime","split","reduce","acc","time","formattedPedestrianSeconds","setLocationsProp","setBikeTimeProp","setWalkTimeProp","catch","error","Swal","fire","text","imageUrl","require","imageWidth","confirmButtonText","padding","stateProp","bikingTime","stateProps","walkingTime","method","dataType","from","to","routeType","autoCompleteDestination","q","collection","results","slice","map","suggestion","componentDidMount","window","placeSearch","container","document","querySelector","onSubmit","this","htmlFor","type","id","placeholder","ref","readableTime","seconds","suffix","hours","Math","floor","abs","readableHours","minutes","round","readableMinutes","CommuteSidebar","CSSTransition","in","timeout","classNames","component","mountOnEnter","unmountOnExit","cyclist","pedestrian","Podcast","handleSubmit","axios","headers","dataResponse","state","userInput","setState","podcastList","length","handleChange","target","getRecentEpisodes","e","podcastID","newEpisodes","episodes","forEach","element","index","push","episodeList","closeEpisodeList","totalTime","showMore","getElementById","classList","toggle","innerHTML","selectEpisode","selectedEpisodeId","podcastLength","episode","setPodcastTime","selectedEpisodeProp","showDetails","remove","setAttribute","closeDialog","add","onChange","onClick","thumbnail","dangerouslySetInnerHTML","__html","description","audio_length_sec","podcast","title_original","description_original","ComparisonResults","closeResultsProp","console","log","podcastTime","podcastEpisode","transportSuggestion","transportationMethod","allTransportMethods","cycling","printTimeDifference","transportMethod","timeDifference","aria-label","style","order","href","Footer","App","setBikeTime","returnedBikingTime","setWalkTime","returnedWalkingTime","setLocations","startAndEndLocations","returnedPodcastTime","selectedEpisode","closeResults","directionsMap","userMap","mapQuestApiKey","path","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.398110f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nounAngry.d6283cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/cyclist.dad81756.png\";","module.exports = __webpack_public_path__ + \"static/media/pedestrian.9f29c988.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0b2aa362.png\";","import React, { Component } from 'react';\r\nimport \"./styles/App.scss\";\r\nimport logo from './styles/assets/logo.png'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"Header\">\r\n            <div className=\"Header__displayArea\">\r\n              <div className=\"Header__headerContent\">\r\n                <div className=\"wrapper\">\r\n                  <div className=\"Header__linksAndLogo\">\r\n                    <img\r\n                      className=\"Header__logo\"\r\n                      src={logo}\r\n                      alt=\"Paths and Podcasts Logo\"\r\n                      title=\"Paths and Podcasts\"\r\n                    />\r\n                  </div>\r\n\r\n                  <h2 className=\"Header__tagline\">\r\n                    Who said your commute has to be boring?\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// EXPORT ========================================\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport \"./styles/App.scss\";\r\n\r\nclass MapQuestSearch extends Component {\r\n  displayMap = (userStart, userEnd) => {\r\n    return Axios({\r\n      url: \"https://www.mapquestapi.com/staticmap/v5/map\",\r\n      params: {\r\n        key: this.props.apiKey,\r\n        format: \"png\",\r\n        start: userStart,\r\n        end: userEnd,\r\n        size: \"300,200@2x\",\r\n        zoom: 12,\r\n        routeColor: \"24b62c\",\r\n        routeArc: true\r\n      }\r\n    }).then(data => {\r\n      this.props.mapProp(data.request.responseURL);\r\n    });\r\n  };\r\n\r\n  // On form submit, take both user inputs and make axios call to retrieve travel time (walking and biking)\r\n  getMapInfo = event => {\r\n    event.preventDefault();\r\n\r\n    Axios.all(\r\n      [\r\n        this.makeAxiosCallBike(\r\n          this.refs.userStart.value,\r\n          this.refs.userDestination.value\r\n        ),\r\n        this.makeAxiosCallWalk(\r\n          this.refs.userStart.value,\r\n          this.refs.userDestination.value\r\n        )\r\n      ]\r\n      // When axios data is returned, set locations and formatted time to state\r\n    )\r\n      .then(responseArray => {\r\n        const returnLocationInfo = responseArray[0].data.route.locations;\r\n\r\n        let locationObject = {\r\n          startAddress: returnLocationInfo[0].street,\r\n          startCity: returnLocationInfo[0].adminArea5,\r\n          endAddress: returnLocationInfo[1].street,\r\n          endCity: returnLocationInfo[1].adminArea5\r\n        };\r\n\r\n        let formattedBikeSeconds = responseArray[0].data.route.formattedTime\r\n          .split(\":\")\r\n          .reduce((acc, time) => 60 * acc + +time);\r\n\r\n        let formattedPedestrianSeconds = responseArray[1].data.route.formattedTime\r\n          .split(\":\")\r\n          .reduce((acc, time) => 60 * acc + +time);\r\n\r\n        this.props.setLocationsProp(locationObject);\r\n        this.props.setBikeTimeProp(formattedBikeSeconds);\r\n        this.props.setWalkTimeProp(formattedPedestrianSeconds);\r\n\r\n        this.displayMap(\r\n          returnLocationInfo[0].street,\r\n          returnLocationInfo[1].street\r\n        );\r\n      })\r\n      .catch(error => {\r\n        if (error) {\r\n          Swal.fire({\r\n            title: \"Uh-oh!\",\r\n            text:\r\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\r\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\r\n            imageWidth: 100,\r\n            confirmButtonText: \"Let me try again\",\r\n            padding: \"2rem\"\r\n          });\r\n        } else if (error.request) {\r\n          Swal.fire({\r\n            title: \"Uh-oh!\",\r\n            text:\r\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\r\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\r\n            imageWidth: 100,\r\n            confirmButtonText: \"Let me try again\",\r\n            padding: \"2rem\"\r\n          });\r\n        } else if (\r\n          this.props.stateProp.bikingTime === \"00:00:00\" ||\r\n          this.props.stateProps.walkingTime === \"\"\r\n        ) {\r\n          Swal.fire({\r\n            title: \"Uh-oh!\",\r\n            text:\r\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\r\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\r\n            imageWidth: 100,\r\n            confirmButtonText: \"Let me try again\",\r\n            padding: \"2rem\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  makeAxiosCallBike = (userStart, userDestination) => {\r\n    return Axios({\r\n      url: \"https://www.mapquestapi.com/directions/v2/route\",\r\n      method: \"GET\",\r\n      dataType: \"json\",\r\n      params: {\r\n        key: this.props.apiKey,\r\n        from: userStart,\r\n        to: userDestination,\r\n        routeType: \"bicycle\"\r\n      }\r\n    });\r\n  };\r\n\r\n  makeAxiosCallWalk = (userStart, userDestination) => {\r\n    return Axios({\r\n      url: \"https://www.mapquestapi.com/directions/v2/route\",\r\n      method: \"GET\",\r\n      dataType: \"json\",\r\n      params: {\r\n        key: this.props.apiKey,\r\n        from: userStart,\r\n        to: userDestination,\r\n        routeType: \"pedestrian\"\r\n      }\r\n    });\r\n  };\r\n\r\n  // Autocomplete axios call on input keydown (US only 😫)\r\n  autoCompleteDestination = () => {\r\n    return Axios({\r\n      url: \"http://www.mapquestapi.com/search/v3/prediction\",\r\n      method: \"GET\",\r\n      dataType: \"json\",\r\n      params: {\r\n        key: this.props.apiKey,\r\n        q: this.refs.userDestination.value,\r\n        collection: \"address\"\r\n      }\r\n    }).then(data => {\r\n      let slicedSuggestionArray = data.data.results.slice(0, 5);\r\n\r\n      slicedSuggestionArray.map(suggestion => {\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.placeSearch({\r\n      key: this.props.apiKey,\r\n      container: document.querySelector(\"#userStart\"),\r\n    });\r\n\r\n    window.placeSearch({\r\n      key: this.props.apiKey,\r\n      container: document.querySelector(\"#userDestination\"),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MapQuest__searchArea\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"MapQuest__introContent\">\r\n            <h2>Hit the road</h2>\r\n            <p>\r\n              Find the best way to reach your destination. Enter your start\r\n              location and your desired destination.\r\n            </p>\r\n          </div>\r\n\r\n          <form className=\"MapQuest__form\" onSubmit={this.getMapInfo}>\r\n            <label htmlFor=\"userStart\" className=\"visuallyHidden\">\r\n              Enter Your Location\r\n            </label>\r\n            <input\r\n              type=\"search\"\r\n              id=\"userStart\"\r\n              placeholder=\"Enter Your Location\"\r\n              ref=\"userStart\"\r\n            />\r\n            <label htmlFor=\"userDestination\" className=\"visuallyHidden\">\r\n              Enter Your Destination\r\n            </label>\r\n            <input\r\n              type=\"search\"\r\n              id=\"userDestination\"\r\n              placeholder=\"Enter Your Location\"\r\n              ref=\"userDestination\"\r\n            />\r\n            <button className=\"MapQuest__submitBtn\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapQuestSearch;\r\n","const readableTime = seconds => {\r\n  const readableMinutes = (seconds, suffix = \"s\") => {\r\n    const minutes = Math.round(Math.abs(seconds) / 60);\r\n    return `${minutes > 60 ? minutes % 60 : minutes} minute${\r\n      minutes !== 1 ? suffix : \"\"\r\n    }`;\r\n  };\r\n\r\n  const readableHours = (seconds, suffix = \"s \") => {\r\n    const hours = Math.floor(Math.abs(seconds) / 3600);\r\n    return hours ? `${hours} hour${hours !== 1 ? suffix : \" \"}` : \"\";\r\n  };\r\n\r\n  return `${readableHours(seconds)}${readableMinutes(seconds)}`;\r\n};\r\n\r\nexport default readableTime;","import React from \"react\";\r\nimport readableTime from \"./readableTime\";\r\nimport cyclist from \"./styles/assets/cyclist.png\";\r\nimport pedestrian from \"./styles/assets/pedestrian.png\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction CommuteSidebar(props) {\r\n  const { bikingTime, walkingTime } = props;\r\n  return (\r\n    <CSSTransition\r\n      in={walkingTime ? true : false}\r\n      timeout={400}\r\n      classNames=\"show-sidebar\"\r\n      component={null}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"CommuteSidebar\">\r\n        <div className=\"CommuteSidebar__textContainer\">\r\n          <p className=\"CommuteSidebar__time\">\r\n            <span className=\"CommuteSidebar__icon\">\r\n              <img\r\n                src={cyclist}\r\n                alt=\"biking commute length\"\r\n                className=\"CommuteSidebar__img\"\r\n              />\r\n            </span>\r\n            {readableTime(bikingTime)}\r\n          </p>\r\n\r\n          <p className=\"CommuteSidebar__time\">\r\n            <span className=\"CommuteSidebar__icon\">\r\n              <img\r\n                src={pedestrian}\r\n                alt=\"walking commute length\"\r\n                className=\"CommuteSidebar__img\"\r\n              />\r\n            </span>\r\n            {readableTime(walkingTime)}\r\n          </p>\r\n        </div>\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default CommuteSidebar;\r\n","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport \"./styles/App.scss\";\r\n// SWEET ALERTS\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nclass Podcast extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            podcastList: [], \r\n            userInput: \"\",\r\n            episodeList: [],\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        axios({\r\n            url:`https://listen-api.listennotes.com/api/v2/search`,\r\n            method: `GET`,\r\n            headers:{'X-ListenAPI-Key':'f1e31e292af446549bfbfebe744dd3ce'},\r\n            dataResponse: `jsonp`,\r\n            params:{\r\n                q: this.state.userInput,\r\n                type: \"podcast\"\r\n            }\r\n        }).then((data)=>{\r\n            this.setState({\r\n                podcastList: data.data.results\r\n            })  \r\n            \r\n            if (this.state.podcastList.length === 0) {\r\n            Swal.fire({\r\n                title: \"Uh-oh!\",\r\n                text:\r\n                  \"Looks like we don't have any podcasts that match your criteria (you must be super picky!).  Please try again and broaden your horizons.\",\r\n                imageUrl: require(\"./styles/assets/nounAngry.png\"),\r\n                imageWidth: 100,\r\n                confirmButtonText: \"Let me try again\",\r\n                padding: \"2rem\"\r\n              });\r\n            }\r\n        })  \r\n    }  \r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            userInput: event.target.value\r\n        })\r\n    }\r\n\r\n    // Queries the Listen Podcast API for the 10 most recent podcast episodes\r\n    getRecentEpisodes = (e) => {\r\n        const podcastID = e.target.id;\r\n\r\n        axios({\r\n            url: `https://listen-api.listennotes.com/api/v2/podcasts/${podcastID}`,\r\n            method: `GET`,\r\n            headers: { \"X-ListenAPI-Key\": \"f1e31e292af446549bfbfebe744dd3ce\" },\r\n            dataResponse: `json`\r\n        }).then(data => {\r\n            const newEpisodes = [];\r\n\r\n            data.data.episodes.forEach((element, index) => {\r\n                if (index < 10) {\r\n                newEpisodes.push(element);\r\n\r\n                this.setState({\r\n                    episodeList: newEpisodes\r\n                });\r\n\r\n                } ;\r\n            });\r\n        });\r\n    }\r\n\r\n    closeEpisodeList = () => {\r\n        this.setState({\r\n            episodeList: \"\"\r\n        });\r\n    };\r\n\r\n    totalTime = (seconds)=>{\r\n        const hours = Math.floor(seconds/3600);\r\n        const minutes = Math.round((seconds %= 3600)/60);\r\n        if(hours > 0){\r\n            return `${hours} h ${minutes} min`\r\n        }else{\r\n            return `${minutes} min`\r\n        }\r\n    };\r\n\r\n    showMore = (e, index) =>{\r\n        document.getElementById(`PodcastCard__description--${index}`).classList.toggle(\"PodcastCard__description--snippet\")\r\n\r\n        if(e.target.innerHTML === \"... Show more\"){\r\n            e.target.innerHTML = \"Show less\"\r\n        }else{\r\n            e.target.innerHTML = \"... Show more\"\r\n        };\r\n    };\r\n\r\n    selectEpisode = (selectedEpisodeId, index) => {\r\n        let podcastLength = this.state.episodeList[index][\"audio_length_sec\"];\r\n\r\n        this.state.episodeList.map((episode) => {\r\n            if (episode.id === selectedEpisodeId) {\r\n                this.props.setPodcastTime(podcastLength);\r\n                this.props.selectedEpisodeProp(this.state.episodeList[index]);\r\n            };\r\n        });\r\n    };\r\n\r\n    //episode details\r\n    showDetails = (e, index) => {\r\n        document.getElementById(`EpisodeCard__description--${index}`).classList.remove(\"visuallyHidden\")\r\n        document.getElementById(`EpisodeCard__description--${index}`).setAttribute(\"open\", true)\r\n    }\r\n\r\n    closeDialog= (e, index) => {\r\n        document.getElementById(`EpisodeCard__description--${index}`).classList.add(\"visuallyHidden\")\r\n        document.getElementById(`EpisodeCard__description--${index}`).setAttribute(\"open\", false)\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n        <section className=\"PodcastSearch\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"PodcastSearch__introContent\">\r\n                <h2>Pick your Podcast</h2>\r\n                <p>\r\n                    Find an episode of a podcast to keep you entertained on your commute.\r\n                </p>\r\n            </div>\r\n\r\n            <form onSubmit={this.handleSubmit} className=\"PodcastSearch__form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search podcast\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.userInput}\r\n                    className=\"PodcastSearch__textInput\"\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    onSubmit={this.handleSubmit}\r\n                    className=\"PodcastSearch__submitButton\"\r\n                    onClick={this.closeEpisodeList}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n\r\n            <section className=\"PodcastResults\">\r\n                {this.state.episodeList.length ? (\r\n                <button\r\n                    className=\"PodcastResults__button--back\"\r\n                    onClick={this.closeEpisodeList}\r\n                >\r\n                    <span className=\"visuallyHidden\">\r\n                        Click here to go back\r\n                    </span>\r\n                    <i className=\"fas fa-arrow-left\" title=\"Go back\"></i>\r\n                </button>\r\n                ) : null}\r\n\r\n                <ul className=\"PodcastResults__list\">\r\n                    {!this.state.episodeList.length\r\n                        ? this.state.podcastList.map((podcast, index) => {\r\n                            return (\r\n                            <li className=\"PodcastResults__item\" key={podcast.id}>\r\n                                <div>\r\n                                    <img\r\n                                        src={podcast.thumbnail}\r\n                                        alt={podcast.title_original}\r\n                                        className=\"PodcastCard__image\"\r\n                                        id={podcast.id}\r\n                                        onClick={this.getRecentEpisodes}\r\n                                        />\r\n                                    <button\r\n                                        id={podcast.id}\r\n                                        onClick={this.getRecentEpisodes}\r\n                                        className=\"PodcastCard__button\"\r\n                                        >\r\n                                        Episodes\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"PodcastCard__text\">\r\n                                    <h2 className=\"PodcastCard__title\">\r\n                                        {podcast.title_original.split(\"|\")[0]}\r\n                                    </h2>\r\n                                    <p\r\n                                    className=\"PodcastCard__description PodcastCard__description--snippet\"\r\n                                    id={`PodcastCard__description--${index}`}\r\n                                    >\r\n                                    {podcast.description_original}\r\n                                    </p>\r\n        \r\n                                    {\r\n                                    (podcast.description_original.length > 450)\r\n                                    ?\r\n                                    <button \r\n                                        className=\"PodcastCard__button--showMore\"\r\n                                        onClick={(e)=>{this.showMore(e, index)}}>\r\n                                        ... Show more\r\n                                    </button>\r\n                                    : null\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                            );\r\n                        })\r\n                    : this.state.episodeList.map((episode, index) => {  \r\n                        return (\r\n                        <li\r\n                            key={episode.id}\r\n                            className=\"EpisodeResults__item\"\r\n                            ref=\"singleEpisode\"\r\n                        >\r\n                            <img\r\n                                src={episode.thumbnail}\r\n                                alt={episode.title}\r\n                                className=\"PodcastCard__image\"\r\n                            />\r\n                            <div>\r\n                                <h2 className=\"PodcastCard__title\">\r\n                                {episode.title}\r\n                                </h2>\r\n                                <dialog\r\n                                className=\"visuallyHidden\"\r\n                                id={`EpisodeCard__description--${index}`}\r\n                                >\r\n                                    <div className=\"EpisodeCard__titleBar\">\r\n                                        <p>{episode.title}</p>\r\n                                        <button\r\n                                        className=\"EpisodeCard__closeDialog\"\r\n                                        onClick={e => {\r\n                                            this.closeDialog(e, index);\r\n                                        }}\r\n                                    >\r\n                                        x\r\n                                        </button>\r\n                                    </div>\r\n                                    <div\r\n                                        dangerouslySetInnerHTML={{\r\n                                        __html: episode.description\r\n                                        }}\r\n                                        className=\"EpisodeCard__description\"\r\n                                    />\r\n                                </dialog>\r\n                                <div className=\"EpisodeCard__options\">\r\n                                    <div className=\"EpisodeCard__options--container\">\r\n                                        <button\r\n                                        className=\"EpisodeCard__options--listen\"\r\n                                        onClick={() => this.selectEpisode(episode.id, index)}\r\n                                        >\r\n                                        <i className=\"fas fa-headphones-alt\"></i> Listen\r\n                                        </button>\r\n                                        <p className=\"EpisodeCard__options--audioLength\">\r\n                                        {this.totalTime(episode.audio_length_sec)}\r\n                                        </p>\r\n                                    </div>\r\n                                    <button\r\n                                    className=\"EpisodeCard__options--details\"\r\n                                    onClick={e => {\r\n                                        this.showDetails(e, index);\r\n                                    }}\r\n                                    >\r\n                                    Details\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Podcast","import React, { Component } from \"react\";\r\nimport readableTime from './readableTime';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport cyclist from \"./styles/assets/cyclist.png\";\r\nimport pedestrian from \"./styles/assets/pedestrian.png\";\r\n\r\nclass ComparisonResults extends Component {\r\n\r\n  render() {\r\n    const { results, closeResultsProp } = this.props;\r\n    console.log(results);\r\n    const { podcastTime, bikingTime, walkingTime, podcastEpisode, map } = results;\r\n\r\n    // Adds the '--selected' modifier to the transportation method that's closest to the travel time\r\n    function transportSuggestion(transportationMethod) {\r\n      // Map the classnames that will be output onto the element\r\n      const allTransportMethods = {\r\n        cycling: \"ComparisonResults__option\",\r\n        pedestrian: \"ComparisonResults__option\"\r\n      };\r\n\r\n      if (\r\n        Math.abs(podcastTime - walkingTime) > Math.abs(podcastTime - bikingTime)\r\n      ) {\r\n        allTransportMethods.cycling =\r\n          \"ComparisonResults__option ComparisonResults__option--selected\";\r\n      } else {\r\n        allTransportMethods.pedestrian =\r\n          \"ComparisonResults__option ComparisonResults__option--selected\";\r\n      }\r\n\r\n      // Return the appropriate classnames\r\n      return allTransportMethods[transportationMethod];\r\n    }\r\n\r\n    // Takes the travel time and compares it to the podcast length\r\n    const printTimeDifference = transportMethod => {\r\n      const timeDifference = transportMethod - podcastTime;\r\n\r\n      if (transportMethod === podcastTime) {\r\n        return (\r\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--exact\">\r\n            EXACT MATCH\r\n          </span>\r\n        );\r\n      } else if (timeDifference < 0) {\r\n        return (\r\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--lower\">\r\n            -{readableTime(timeDifference)}\r\n          </span>\r\n        );\r\n      } else {\r\n        return (\r\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--higher\">\r\n            +{readableTime(timeDifference)}\r\n          </span>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={podcastTime ? true : false}\r\n          timeout={400}\r\n          classNames=\"show-modal\"\r\n          component={null}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"ModalContainer\">\r\n            <section className=\"ComparisonResults\">\r\n              <div className=\"wrapper\">\r\n                <button\r\n                  aria-label=\"close modal\"\r\n                  className=\"ComparisonResults__button--close\"\r\n                  onClick={closeResultsProp}\r\n                >\r\n                  Close\r\n                </button>\r\n\r\n                <h2 className=\"ComparisonResults__heading\">\r\n                  You should{\" \"}\r\n                  {Math.abs(podcastTime - walkingTime) >\r\n                  Math.abs(podcastTime - bikingTime)\r\n                    ? \"cycle\"\r\n                    : \"walk\"}\r\n                </h2>\r\n\r\n                <section className=\"ComparisonResults__options\">\r\n                  <div className={transportSuggestion(\"cycling\")}>\r\n                    <img\r\n                      className=\"ComparisonResults__icon\"\r\n                      src={cyclist}\r\n                      alt=\"A cyclist\"\r\n                    />\r\n                    {printTimeDifference(bikingTime)}\r\n                  </div>\r\n\r\n                  <div className=\"ComparisonResults__details\">\r\n                    <p>Podcast length: {readableTime(podcastTime)}</p>\r\n                    <p>Biking time: {readableTime(bikingTime)}</p>\r\n                    <p>Walking time: {readableTime(walkingTime)}</p>\r\n                  </div>\r\n\r\n                  <div className={transportSuggestion(\"pedestrian\")}>\r\n                    <img\r\n                      className=\"ComparisonResults__icon\"\r\n                      src={pedestrian}\r\n                      alt=\"A pedestrian\"\r\n                    />\r\n                    {printTimeDifference(walkingTime)}\r\n                  </div>\r\n                </section>\r\n\r\n                <div className=\"ComparisonResults__body\">\r\n                  <section \r\n                    className=\"ComparisonResults__podcast\"\r\n                    style={Math.abs(podcastTime - walkingTime) <\r\n                  Math.abs(podcastTime - bikingTime)\r\n                    ? {order: 1}\r\n                    : {}}\r\n                  >\r\n                    <img\r\n                      src={podcastEpisode.thumbnail}\r\n                      alt=\"\"\r\n                      className=\"ComparisonResults__img\"\r\n                    />\r\n                    <h3 className=\"ComparisonResults__podcastTitle\">\r\n                      {podcastEpisode.title}\r\n                    </h3>\r\n                    <a\r\n                      href={podcastEpisode[\"listennotes_url\"]}\r\n                      target=\"_blank\"\r\n                      className=\"ComparisonResults__link\"\r\n                    >\r\n                      More info\r\n                    </a>\r\n                  </section>\r\n\r\n                  <section className=\"ComparisonResults__map\">\r\n                    <img src={map} alt=\"\" />\r\n                  </section>\r\n                </div>\r\n\r\n                <p className=\"ComparisonResults__disclaimer\">\r\n                  We don't advise taking your life in your hands by biking and\r\n                  podcasting.\r\n                </p>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComparisonResults;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/App.scss\";\r\n\r\nclass Footer extends Component {\r\n\r\n  render() {\r\n\r\n    \r\n    return (\r\n      <div className=\"Footer\">\r\n        <div className=\"wrapper\">\r\n            <p className=\"Footer__copy\">\r\n              Paths and Podcasts  |  Copyright 2019  |  Russell Bentulan, Alissa Cheng,\r\n              Corey Derouin and James Lewis\r\n            </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// EXPORT ========================================\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header'\r\nimport MapQuestSearch from './MapQuestSearch';\r\nimport CommuteSidebar from './CommuteSidebar';\r\nimport Podcast from \"./Podcast\";\r\nimport ComparisonResults from './ComparisonResults';\r\nimport Footer from \"./Footer\";\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './styles/App.scss';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      mapQuestApiKey: \"uMDO6BJLrXNNrJI5BZ7A0tFS6AojdBjn\",\r\n      startAndEndLocations: {},\r\n      bikingTime: \"\",\r\n      walkingTime: \"\",\r\n      podcastTime: \"\",\r\n      podcastEpisode: {},\r\n      map: \"\"\r\n    };\r\n  };\r\n\r\n  setBikeTime = (returnedBikingTime) => {\r\n    this.setState({\r\n      bikingTime: returnedBikingTime,\r\n    })\r\n  }\r\n\r\n  setWalkTime = (returnedWalkingTime) => {\r\n    this.setState({\r\n      walkingTime: returnedWalkingTime,\r\n    });\r\n  }\r\n\r\n  setLocations = (locationObject) => {\r\n    this.setState({\r\n      startAndEndLocations: locationObject,\r\n    })\r\n  }\r\n\r\n  setPodcastTime = (returnedPodcastTime) => {\r\n    this.setState({\r\n      podcastTime: returnedPodcastTime,\r\n    })\r\n  }\r\n\r\n  selectedEpisode = (podcastEpisode) => {\r\n    this.setState({\r\n      podcastEpisode: podcastEpisode,\r\n    })\r\n  }\r\n\r\n  closeResults = () => {\r\n    this.setState({\r\n      podcastTime: \"\",\r\n      podcastEpisode: {}\r\n    });\r\n  }\r\n\r\n  directionsMap = (userMap) => {\r\n    this.setState({\r\n      map: userMap\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" component={Header} />\r\n\r\n        <div className=\"Search__formArea\">\r\n          <MapQuestSearch\r\n            setLocationsProp={this.setLocations}\r\n            setBikeTimeProp={this.setBikeTime}\r\n            setWalkTimeProp={this.setWalkTime}\r\n            apiKey={this.state.mapQuestApiKey}\r\n            stateProp={this.state}\r\n            mapProp={this.directionsMap}\r\n          />\r\n  \r\n          { this.state.bikingTime ?\r\n            <Podcast\r\n              setPodcastTime={this.setPodcastTime}\r\n              selectedEpisodeProp={this.selectedEpisode}\r\n            />\r\n            : null \r\n          }\r\n          \r\n          {\r\n            (this.state.bikingTime && !this.state.podcastTime) ?\r\n            <CommuteSidebar\r\n              walkingTime={this.state.walkingTime}\r\n              bikingTime={this.state.bikingTime}\r\n            />\r\n            : null\r\n          }\r\n\r\n          { this.state.podcastEpisode ? \r\n          <ComparisonResults \r\n            results={this.state}\r\n            closeResultsProp={this.closeResults}\r\n          />\r\n          : null }\r\n        </div>\r\n\r\n        <Route path=\"/\" component={Footer}/>\r\n      </Router>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
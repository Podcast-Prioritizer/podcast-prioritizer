{"version":3,"sources":["styles/assets/nounAngry.png","styles/assets/logo.png","styles/assets/cyclist.png","styles/assets/pedestrian.png","Header.js","MapQuestSearch.js","Podcast.js","ComparisonResults.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","title","Component","MapQuestSearch","displayMap","userStart","userEnd","Axios","url","params","key","props","apiKey","format","start","end","size","zoom","routeColor","routeArc","then","data","mapProp","request","responseURL","getMapInfo","event","preventDefault","all","makeAxiosCallBike","refs","value","userDestination","makeAxiosCallWalk","responseArray","returnLocationInfo","route","locations","locationObject","startAddress","street","startCity","adminArea5","endAddress","endCity","formattedBikeSeconds","formattedTime","split","reduce","acc","time","formattedPedestrianSeconds","setLocationsProp","setBikeTimeProp","setWalkTimeProp","catch","error","Swal","fire","text","imageUrl","require","imageWidth","confirmButtonText","padding","stateProp","bikingTime","stateProps","walkingTime","method","dataType","from","to","routeType","autoCompleteDestination","q","collection","results","slice","map","suggestion","componentDidMount","window","placeSearch","container","document","querySelector","onSubmit","this","htmlFor","type","id","placeholder","ref","Podcast","handleSubmit","axios","headers","dataResponse","state","userInput","setState","podcastList","length","handleChange","target","getRecentEpisodes","e","podcastID","newEpisodes","episodes","forEach","element","index","push","episodeList","closeEpisodeList","totalTime","seconds","hours","Math","floor","minutes","round","showMore","getElementById","classList","toggle","innerHTML","selectEpisode","selectedEpisodeId","podcastLength","episode","setPodcastTime","selectedEpisodeProp","showDetails","remove","setAttribute","closeDialog","add","onChange","onClick","thumbnail","dangerouslySetInnerHTML","__html","description","audio_length_sec","podcast","title_original","description_original","ComparisonResults","readableTime","suffix","abs","readableHours","readableMinutes","closeResultsProp","podcastTime","transportSuggestion","transportationMethod","allTransportMethods","cycling","pedestrian","printTimeDifference","transportMethod","timeDifference","CSSTransition","in","timeout","classNames","component","mountOnEnter","unmountOnExit","aria-label","cyclist","Footer","App","setBikeTime","returnedBikingTime","setWalkTime","returnedWalkingTime","setLocations","startAndEndLocations","returnedPodcastTime","selectedEpisode","podcastEpisode","closeResults","directionsMap","userMap","mapQuestApiKey","path","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yIAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,4KCgC5BC,E,iLA1BP,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,eACVC,IAAKC,IACLC,IAAI,0BACJC,MAAM,wBAIV,wBAAIJ,UAAU,mBAAd,mD,GAhBGK,a,kCC2MNC,E,2MAxMbC,WAAa,SAACC,EAAWC,GACvB,OAAOC,IAAM,CACXC,IAAK,+CACLC,OAAQ,CACNC,IAAK,EAAKC,MAAMC,OAChBC,OAAQ,MACRC,MAAOT,EACPU,IAAKT,EACLU,KAAM,aACNC,KAAM,GACNC,WAAY,SACZC,UAAU,KAEXC,MAAK,SAAAC,GACN,EAAKV,MAAMW,QAAQD,EAAKE,QAAQC,iB,EAKpCC,WAAa,SAAAC,GACXA,EAAMC,iBAENpB,IAAMqB,IACJ,CACE,EAAKC,kBACH,EAAKC,KAAKzB,UAAU0B,MACpB,EAAKD,KAAKE,gBAAgBD,OAE5B,EAAKE,kBACH,EAAKH,KAAKzB,UAAU0B,MACpB,EAAKD,KAAKE,gBAAgBD,SAK7BX,MAAK,SAAAc,GACJ,IAAMC,EAAqBD,EAAc,GAAGb,KAAKe,MAAMC,UAEnDC,EAAiB,CACnBC,aAAcJ,EAAmB,GAAGK,OACpCC,UAAWN,EAAmB,GAAGO,WACjCC,WAAYR,EAAmB,GAAGK,OAClCI,QAAST,EAAmB,GAAGO,YAG7BG,EAAuBX,EAAc,GAAGb,KAAKe,MAAMU,cACpDC,MAAM,KACNC,QAAO,SAACC,EAAKC,GAAN,OAAe,GAAKD,IAAOC,KAEjCC,EAA6BjB,EAAc,GAAGb,KAAKe,MAAMU,cAC1DC,MAAM,KACNC,QAAO,SAACC,EAAKC,GAAN,OAAe,GAAKD,IAAOC,KAErC,EAAKvC,MAAMyC,iBAAiBd,GAC5B,EAAK3B,MAAM0C,gBAAgBR,GAC3B,EAAKlC,MAAM2C,gBAAgBH,GAE3B,EAAK/C,WACH+B,EAAmB,GAAGK,OACtBL,EAAmB,GAAGK,WAGzBe,OAAM,SAAAC,GACDA,EACFC,IAAKC,KAAK,CACRzD,MAAO,SACP0D,KACE,yHACFC,SAAUC,EAAQ,IAClBC,WAAY,IACZC,kBAAmB,mBACnBC,QAAS,SAEFR,EAAMjC,QACfkC,IAAKC,KAAK,CACRzD,MAAO,SACP0D,KACE,yHACFC,SAAUC,EAAQ,IAClBC,WAAY,IACZC,kBAAmB,mBACnBC,QAAS,SAGyB,aAApC,EAAKrD,MAAMsD,UAAUC,YACiB,KAAtC,EAAKvD,MAAMwD,WAAWC,aAEtBX,IAAKC,KAAK,CACRzD,MAAO,SACP0D,KACE,yHACFC,SAAUC,EAAQ,IAClBC,WAAY,IACZC,kBAAmB,mBACnBC,QAAS,a,EAMnBnC,kBAAoB,SAACxB,EAAW2B,GAC9B,OAAOzB,IAAM,CACXC,IAAK,kDACL6D,OAAQ,MACRC,SAAU,OACV7D,OAAQ,CACNC,IAAK,EAAKC,MAAMC,OAChB2D,KAAMlE,EACNmE,GAAIxC,EACJyC,UAAW,c,EAKjBxC,kBAAoB,SAAC5B,EAAW2B,GAC9B,OAAOzB,IAAM,CACXC,IAAK,kDACL6D,OAAQ,MACRC,SAAU,OACV7D,OAAQ,CACNC,IAAK,EAAKC,MAAMC,OAChB2D,KAAMlE,EACNmE,GAAIxC,EACJyC,UAAW,iB,EAMjBC,wBAA0B,WACxB,OAAOnE,IAAM,CACXC,IAAK,kDACL6D,OAAQ,MACRC,SAAU,OACV7D,OAAQ,CACNC,IAAK,EAAKC,MAAMC,OAChB+D,EAAG,EAAK7C,KAAKE,gBAAgBD,MAC7B6C,WAAY,aAEbxD,MAAK,SAAAC,GACsBA,EAAKA,KAAKwD,QAAQC,MAAM,EAAG,GAEjCC,KAAI,SAAAC,W,EAK9BC,kBAAoB,WAClBC,OAAOC,YAAY,CACjBzE,IAAK,EAAKC,MAAMC,OAChBwE,UAAWC,SAASC,cAAc,gBAGpCJ,OAAOC,YAAY,CACjBzE,IAAK,EAAKC,MAAMC,OAChBwE,UAAWC,SAASC,cAAc,uB,wEAKpC,OACE,yBAAKzF,UAAU,wBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,0BACb,4CACA,oIAMF,0BAAMA,UAAU,iBAAiB0F,SAAUC,KAAK/D,YAC9C,2BAAOgE,QAAQ,YAAY5F,UAAU,kBAArC,uBAGA,2BACE6F,KAAK,SACLC,GAAG,YACHC,YAAY,sBACZC,IAAI,cAEN,2BAAOJ,QAAQ,kBAAkB5F,UAAU,kBAA3C,0BAGA,2BACE6F,KAAK,SACLC,GAAG,kBACHC,YAAY,sBACZC,IAAI,oBAEN,4BAAQhG,UAAU,sBAAsB6F,KAAK,UAA7C,iB,GA/LiBxF,aC2Rd4F,E,YAxRX,aAAc,IAAD,8BACT,+CAQJC,aAAe,SAACrE,GACZA,EAAMC,iBAENqE,IAAM,CACFxF,IAAI,mDACJ6D,OAAO,MACP4B,QAAQ,CAAC,kBAAkB,oCAC3BC,aAAa,QACbzF,OAAO,CACHkE,EAAG,EAAKwB,MAAMC,UACdV,KAAM,aAEXtE,MAAK,SAACC,GACL,EAAKgF,SAAS,CACVC,YAAajF,EAAKA,KAAKwD,UAGW,IAAlC,EAAKsB,MAAMG,YAAYC,QAC3B9C,IAAKC,KAAK,CACNzD,MAAO,SACP0D,KACE,0IACFC,SAAUC,EAAQ,IAClBC,WAAY,IACZC,kBAAmB,mBACnBC,QAAS,aAlCR,EAwCbwC,aAAe,SAAC9E,GACZ,EAAK2E,SAAS,CACVD,UAAW1E,EAAM+E,OAAO1E,SA1CnB,EA+Cb2E,kBAAoB,SAACC,GACjB,IAAMC,EAAYD,EAAEF,OAAOd,GAE3BK,IAAM,CACFxF,IAAI,sDAAD,OAAwDoG,GAC3DvC,OAAO,MACP4B,QAAS,CAAE,kBAAmB,oCAC9BC,aAAa,SACd9E,MAAK,SAAAC,GACJ,IAAMwF,EAAc,GAEpBxF,EAAKA,KAAKyF,SAASC,SAAQ,SAACC,EAASC,GAC7BA,EAAQ,KACZJ,EAAYK,KAAKF,GAEjB,EAAKX,SAAS,CACVc,YAAaN,YA/DhB,EAuEbO,iBAAmB,WACf,EAAKf,SAAS,CACVc,YAAa,MAzER,EA6EbE,UAAY,SAACC,GACT,IAAMC,EAAQC,KAAKC,MAAMH,EAAQ,MAC3BI,EAAUF,KAAKG,OAAOL,GAAW,MAAM,IAC7C,OAAGC,EAAQ,EACD,GAAN,OAAUA,EAAV,cAAqBG,EAArB,QAEM,GAAN,OAAUA,EAAV,SAnFK,EAuFbE,SAAW,SAACjB,EAAGM,GACX5B,SAASwC,eAAT,oCAAqDZ,IAASa,UAAUC,OAAO,qCAErD,kBAAvBpB,EAAEF,OAAOuB,UACRrB,EAAEF,OAAOuB,UAAY,gBAErBrB,EAAEF,OAAOuB,UAAY,iBA7FhB,EAiGbC,cAAgB,SAACC,EAAmBjB,GAChC,IAAIkB,EAAgB,EAAKhC,MAAMgB,YAAYF,GAAvB,iBAEpB,EAAKd,MAAMgB,YAAYpC,KAAI,SAACqD,GACpBA,EAAQzC,KAAOuC,IACf,EAAKvH,MAAM0H,eAAeF,GAC1B,EAAKxH,MAAM2H,oBAAoB,EAAKnC,MAAMgB,YAAYF,SAvGrD,EA6GbsB,YAAc,SAAC5B,EAAGM,GACd5B,SAASwC,eAAT,oCAAqDZ,IAASa,UAAUU,OAAO,kBAC/EnD,SAASwC,eAAT,oCAAqDZ,IAASwB,aAAa,QAAQ,IA/G1E,EAkHbC,YAAa,SAAC/B,EAAGM,GACb5B,SAASwC,eAAT,oCAAqDZ,IAASa,UAAUa,IAAI,kBAC5EtD,SAASwC,eAAT,oCAAqDZ,IAASwB,aAAa,QAAQ,IAlHnF,EAAKtC,MAAQ,CACTG,YAAa,GACbF,UAAW,GACXe,YAAa,IALR,E,sEAuHH,IAAD,OAEL,OACA,6BAAStH,UAAU,iBACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,+BACf,iDACA,qGAKJ,0BAAM0F,SAAUC,KAAKO,aAAclG,UAAU,uBACzC,2BACI6F,KAAK,OACLE,YAAY,iBACZgD,SAAUpD,KAAKgB,aACfzE,MAAOyD,KAAKW,MAAMC,UAClBvG,UAAU,6BAGd,4BACI6F,KAAK,SACLH,SAAUC,KAAKO,aACflG,UAAU,8BACVgJ,QAASrD,KAAK4B,kBAJlB,WAUJ,6BAASvH,UAAU,kBACd2F,KAAKW,MAAMgB,YAAYZ,OACxB,4BACI1G,UAAU,+BACVgJ,QAASrD,KAAK4B,kBAEd,0BAAMvH,UAAU,kBAAhB,yBAGA,uBAAGA,UAAU,oBAAoBI,MAAM,aAEvC,KAEJ,wBAAIJ,UAAU,wBACR2F,KAAKW,MAAMgB,YAAYZ,OA6CvBf,KAAKW,MAAMgB,YAAYpC,KAAI,SAACqD,EAASnB,GACnC,OACA,wBACIvG,IAAK0H,EAAQzC,GACb9F,UAAU,uBACVgG,IAAI,iBAEJ,yBACI/F,IAAKsI,EAAQU,UACb9I,IAAKoI,EAAQnI,MACbJ,UAAU,uBAEd,6BACI,wBAAIA,UAAU,sBACbuI,EAAQnI,OAET,4BACAJ,UAAU,iBACV8F,GAAE,oCAA+BsB,IAE7B,yBAAKpH,UAAU,yBACX,2BAAIuI,EAAQnI,OACZ,4BACAJ,UAAU,2BACVgJ,QAAS,SAAAlC,GACL,EAAK+B,YAAY/B,EAAGM,KAHxB,MASJ,yBACI8B,wBAAyB,CACzBC,OAAQZ,EAAQa,aAEhBpJ,UAAU,8BAGlB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,mCACX,4BACAA,UAAU,+BACVgJ,QAAS,kBAAM,EAAKZ,cAAcG,EAAQzC,GAAIsB,KAE9C,uBAAGpH,UAAU,0BAJb,WAMA,uBAAGA,UAAU,qCACZ,EAAKwH,UAAUe,EAAQc,oBAG5B,4BACArJ,UAAU,gCACVgJ,QAAS,SAAAlC,GACL,EAAK4B,YAAY5B,EAAGM,KAHxB,iBA9FVzB,KAAKW,MAAMG,YAAYvB,KAAI,SAACoE,EAASlC,GACnC,OACA,wBAAIpH,UAAU,uBAAuBa,IAAKyI,EAAQxD,IAC9C,6BACI,yBACI7F,IAAKqJ,EAAQL,UACb9I,IAAKmJ,EAAQC,eACbvJ,UAAU,qBACV8F,GAAIwD,EAAQxD,GACZkD,QAAS,EAAKnC,oBAElB,4BACIf,GAAIwD,EAAQxD,GACZkD,QAAS,EAAKnC,kBACd7G,UAAU,uBAHd,aAQJ,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,sBACTsJ,EAAQC,eAAerG,MAAM,KAAK,IAEvC,uBACAlD,UAAU,6DACV8F,GAAE,oCAA+BsB,IAEhCkC,EAAQE,sBAIRF,EAAQE,qBAAqB9C,OAAS,IAEvC,4BACI1G,UAAU,gCACVgJ,QAAS,SAAClC,GAAK,EAAKiB,SAASjB,EAAGM,KAFpC,iBAKE,kB,GA5MhB/G,a,0CCyIPoJ,E,2MA3IbC,aAAe,SAAAjC,GAab,MAAM,GAAN,OALsB,SAACA,GAA4B,IAAnBkC,EAAkB,uDAAT,KACjCjC,EAAQC,KAAKC,MAAMD,KAAKiC,IAAInC,GAAW,MAC7C,OAAOC,EAAK,UAAMA,EAAN,gBAA6B,IAAVA,EAAciC,EAAS,KAAQ,GAGtDE,CAAcpC,IAAxB,OAZwB,SAACA,GAA2B,IAAlBkC,EAAiB,uDAAR,IACnC9B,EAAUF,KAAKG,MAAMH,KAAKiC,IAAInC,GAAW,IAC/C,MAAM,GAAN,OAAUI,EAAU,GAAKA,EAAU,GAAKA,EAAxC,kBACc,IAAZA,EAAgB8B,EAAS,IASMG,CAAgBrC,K,wEAG3C,IAAD,SAC+B9B,KAAK7E,MAAnCkE,EADD,EACCA,QAAS+E,EADV,EACUA,iBACTC,EAA8ChF,EAA9CgF,YAAa3F,EAAiCW,EAAjCX,WAAYE,EAAqBS,EAArBT,YAAaW,EAAQF,EAARE,IAG9C,SAAS+E,EAAoBC,GAE3B,IAAMC,EAAsB,CAC1BC,QAAS,4BACTC,WAAY,6BAcd,OAVE1C,KAAKiC,IAAII,EAAczF,GAAeoD,KAAKiC,IAAII,EAAc3F,GAE7D8F,EAAoBC,QAClB,gEAEFD,EAAoBE,WAClB,gEAIGF,EAAoBD,GAI7B,IAAMI,EAAsB,SAAAC,GAC1B,IAAMC,EAAiBD,EAAkBP,EAEzC,OAAIO,IAAoBP,EAEpB,0BAAMhK,UAAU,8EAAhB,eAIOwK,EAAiB,EAExB,0BAAMxK,UAAU,8EAAhB,IACI,EAAK0J,aAAac,IAKtB,0BAAMxK,UAAU,+EAAhB,IACI,EAAK0J,aAAac,KAM5B,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,KAAIV,EACJW,QAAS,IACTC,WAAW,aACXC,UAAW,KACXC,cAAY,EACZC,eAAa,GAEb,yBAAK/K,UAAU,kBACb,6BAASA,UAAU,qBACjB,yBAAKA,UAAU,WACb,4BACEgL,aAAW,cACXhL,UAAU,mCACVgJ,QAASe,GAHX,SAQA,wBAAI/J,UAAU,8BAAd,aACa,IACV2H,KAAKiC,IAAII,EAAczF,GACxBoD,KAAKiC,IAAII,EAAc3F,GACnB,QACA,QAGN,6BAASrE,UAAU,8BACjB,yBAAKA,UAAWiK,EAAoB,YAClC,yBACEjK,UAAU,0BACVC,IAAKgL,IACL9K,IAAI,cAELmK,EAAoBjG,IAGvB,yBAAKrE,UAAU,8BACb,8CAAoB2F,KAAK+D,aAAaM,IACtC,2CAAiBrE,KAAK+D,aAAarF,IACnC,4CAAkBsB,KAAK+D,aAAanF,KAGtC,yBAAKvE,UAAWiK,EAAoB,eAClC,yBACEjK,UAAU,0BACVC,IAAKoK,IACLlK,IAAI,iBAELmK,EAAoB/F,KAIzB,6BAASvE,UAAU,0BACjB,yBAAKC,IAAKiF,EAAK/E,IAAI,MAGrB,uBAAGH,UAAU,iCAAb,qF,GA/HgBK,aCiBjB6K,E,iLAdX,OACE,yBAAKlL,UAAU,UACb,yBAAKA,UAAU,WACX,uBAAGA,UAAU,gBAAb,iH,GARSK,a,gBCoGN8K,E,YA5Fb,aAAc,IAAD,8BACX,+CAYFC,YAAc,SAACC,GACb,EAAK7E,SAAS,CACZnC,WAAYgH,KAfH,EAmBbC,YAAc,SAACC,GACb,EAAK/E,SAAS,CACZjC,YAAagH,KArBJ,EAyBbC,aAAe,SAAC/I,GACd,EAAK+D,SAAS,CACZiF,qBAAsBhJ,KA3Bb,EA+Bb+F,eAAiB,SAACkD,GAChB,EAAKlF,SAAS,CACZwD,YAAa0B,KAjCJ,EAqCbC,gBAAkB,SAACC,GACjB,EAAKpF,SAAS,CACZoF,eAAgBA,KAvCP,EA2CbC,aAAe,WACb,EAAKrF,SAAS,CACZwD,YAAa,MA7CJ,EAiDb8B,cAAgB,SAACC,GACf,EAAKvF,SAAS,CACZtB,IAAK6G,KAjDP,EAAKzF,MAAQ,CACX0F,eAAgB,mCAChBP,qBAAsB,GACtBpH,WAAY,GACZE,YAAa,GACbyF,YAAa,GACb4B,eAAgB,GAChB1G,IAAK,IATI,E,sEAwDX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,KAAK,IAAIpB,UAAW9K,IAE3B,yBAAKC,UAAU,oBACb,kBAAC,EAAD,CACEuD,iBAAkBoC,KAAK6F,aACvBhI,gBAAiBmC,KAAKyF,YACtB3H,gBAAiBkC,KAAK2F,YACtBvK,OAAQ4E,KAAKW,MAAM0F,eACnB5H,UAAWuB,KAAKW,MAChB7E,QAASkE,KAAKmG,gBAGdnG,KAAKW,MAAMjC,WACX,kBAAC,EAAD,CACEmE,eAAgB7C,KAAK6C,eACrBC,oBAAqB9C,KAAKgG,kBAE1B,KAGFhG,KAAKW,MAAMsF,eACb,kBAAC,EAAD,CACE5G,QAASW,KAAKW,MACdyD,iBAAkBpE,KAAKkG,eAEvB,MAGJ,kBAAC,IAAD,CAAOI,KAAK,IAAIpB,UAAWK,S,GAvFjB7K,aCEE6L,QACW,cAA7B7G,OAAO8G,SAASC,UAEe,UAA7B/G,OAAO8G,SAASC,UAEhB/G,OAAO8G,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAAS/G,SAASwC,eAAe,SD4H3C,kBAAmBwE,WACrBA,UAAUC,cAAcC,MAAMnL,MAAK,SAAAoL,GACjCA,EAAaC,kB","file":"static/js/main.7209e36c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nounAngry.d6283cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0b2aa362.png\";","module.exports = __webpack_public_path__ + \"static/media/cyclist.dad81756.png\";","module.exports = __webpack_public_path__ + \"static/media/pedestrian.9f29c988.png\";","import React, { Component } from 'react';\nimport \"./styles/App.scss\";\nimport logo from './styles/assets/logo.png'\n\nclass Header extends Component {\n    render() {\n        return (\n          <div className=\"Header\">\n            <div className=\"Header__displayArea\">\n              <div className=\"Header__headerContent\">\n                <div className=\"wrapper\">\n                  <div className=\"Header__linksAndLogo\">\n                    <img\n                      className=\"Header__logo\"\n                      src={logo}\n                      alt=\"Paths and Podcasts Logo\"\n                      title=\"Paths and Podcasts\"\n                    />\n                  </div>\n\n                  <h2 className=\"Header__tagline\">\n                    Who said your commute has to be boring?\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\n// EXPORT ========================================\nexport default Header;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nimport \"./styles/App.scss\";\n\nclass MapQuestSearch extends Component {\n  displayMap = (userStart, userEnd) => {\n    return Axios({\n      url: \"https://www.mapquestapi.com/staticmap/v5/map\",\n      params: {\n        key: this.props.apiKey,\n        format: \"png\",\n        start: userStart,\n        end: userEnd,\n        size: \"300,200@2x\",\n        zoom: 12,\n        routeColor: \"24b62c\",\n        routeArc: true\n      }\n    }).then(data => {\n      this.props.mapProp(data.request.responseURL);\n    });\n  };\n\n  // On form submit, take both user inputs and make axios call to retrieve travel time (walking and biking)\n  getMapInfo = event => {\n    event.preventDefault();\n\n    Axios.all(\n      [\n        this.makeAxiosCallBike(\n          this.refs.userStart.value,\n          this.refs.userDestination.value\n        ),\n        this.makeAxiosCallWalk(\n          this.refs.userStart.value,\n          this.refs.userDestination.value\n        )\n      ]\n      // When axios data is returned, set locations and formatted time to state\n    )\n      .then(responseArray => {\n        const returnLocationInfo = responseArray[0].data.route.locations;\n\n        let locationObject = {\n          startAddress: returnLocationInfo[0].street,\n          startCity: returnLocationInfo[0].adminArea5,\n          endAddress: returnLocationInfo[1].street,\n          endCity: returnLocationInfo[1].adminArea5\n        };\n\n        let formattedBikeSeconds = responseArray[0].data.route.formattedTime\n          .split(\":\")\n          .reduce((acc, time) => 60 * acc + +time);\n\n        let formattedPedestrianSeconds = responseArray[1].data.route.formattedTime\n          .split(\":\")\n          .reduce((acc, time) => 60 * acc + +time);\n\n        this.props.setLocationsProp(locationObject);\n        this.props.setBikeTimeProp(formattedBikeSeconds);\n        this.props.setWalkTimeProp(formattedPedestrianSeconds);\n\n        this.displayMap(\n          returnLocationInfo[0].street,\n          returnLocationInfo[1].street\n        );\n      })\n      .catch(error => {\n        if (error) {\n          Swal.fire({\n            title: \"Uh-oh!\",\n            text:\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\n            imageWidth: 100,\n            confirmButtonText: \"Let me try again\",\n            padding: \"2rem\"\n          });\n        } else if (error.request) {\n          Swal.fire({\n            title: \"Uh-oh!\",\n            text:\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\n            imageWidth: 100,\n            confirmButtonText: \"Let me try again\",\n            padding: \"2rem\"\n          });\n        } else if (\n          this.props.stateProp.bikingTime === \"00:00:00\" ||\n          this.props.stateProps.walkingTime === \"\"\n        ) {\n          Swal.fire({\n            title: \"Uh-oh!\",\n            text:\n              \"Looks like you're not too sure where you're going.  Make sure you have included both a start and a destination address\",\n            imageUrl: require(\"./styles/assets/nounAngry.png\"),\n            imageWidth: 100,\n            confirmButtonText: \"Let me try again\",\n            padding: \"2rem\"\n          });\n        }\n      });\n  };\n\n  makeAxiosCallBike = (userStart, userDestination) => {\n    return Axios({\n      url: \"https://www.mapquestapi.com/directions/v2/route\",\n      method: \"GET\",\n      dataType: \"json\",\n      params: {\n        key: this.props.apiKey,\n        from: userStart,\n        to: userDestination,\n        routeType: \"bicycle\"\n      }\n    });\n  };\n\n  makeAxiosCallWalk = (userStart, userDestination) => {\n    return Axios({\n      url: \"https://www.mapquestapi.com/directions/v2/route\",\n      method: \"GET\",\n      dataType: \"json\",\n      params: {\n        key: this.props.apiKey,\n        from: userStart,\n        to: userDestination,\n        routeType: \"pedestrian\"\n      }\n    });\n  };\n\n  // Autocomplete axios call on input keydown (US only 😫)\n  autoCompleteDestination = () => {\n    return Axios({\n      url: \"http://www.mapquestapi.com/search/v3/prediction\",\n      method: \"GET\",\n      dataType: \"json\",\n      params: {\n        key: this.props.apiKey,\n        q: this.refs.userDestination.value,\n        collection: \"address\"\n      }\n    }).then(data => {\n      let slicedSuggestionArray = data.data.results.slice(0, 5);\n\n      slicedSuggestionArray.map(suggestion => {\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    window.placeSearch({\n      key: this.props.apiKey,\n      container: document.querySelector(\"#userStart\"),\n    });\n\n    window.placeSearch({\n      key: this.props.apiKey,\n      container: document.querySelector(\"#userDestination\"),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"MapQuest__searchArea\">\n        <div className=\"wrapper\">\n          <div className=\"MapQuest__introContent\">\n            <h2>Hit the road</h2>\n            <p>\n              Find the best way to reach your destination. Enter your start\n              location and your desired destination.\n            </p>\n          </div>\n\n          <form className=\"MapQuest__form\" onSubmit={this.getMapInfo}>\n            <label htmlFor=\"userStart\" className=\"visuallyHidden\">\n              Enter Your Location\n            </label>\n            <input\n              type=\"search\"\n              id=\"userStart\"\n              placeholder=\"Enter Your Location\"\n              ref=\"userStart\"\n            />\n            <label htmlFor=\"userDestination\" className=\"visuallyHidden\">\n              Enter Your Destination\n            </label>\n            <input\n              type=\"search\"\n              id=\"userDestination\"\n              placeholder=\"Enter Your Location\"\n              ref=\"userDestination\"\n            />\n            <button className=\"MapQuest__submitBtn\" type=\"submit\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapQuestSearch;\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport \"./styles/App.scss\";\n// SWEET ALERTS\nimport Swal from \"sweetalert2\";\n\n\n\nclass Podcast extends Component{\n    constructor(){\n        super();\n        this.state = {\n            podcastList: [], \n            userInput: \"\",\n            episodeList: [],\n        };\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n        axios({\n            url:`https://listen-api.listennotes.com/api/v2/search`,\n            method: `GET`,\n            headers:{'X-ListenAPI-Key':'f1e31e292af446549bfbfebe744dd3ce'},\n            dataResponse: `jsonp`,\n            params:{\n                q: this.state.userInput,\n                type: \"podcast\"\n            }\n        }).then((data)=>{\n            this.setState({\n                podcastList: data.data.results\n            })  \n            \n            if (this.state.podcastList.length === 0) {\n            Swal.fire({\n                title: \"Uh-oh!\",\n                text:\n                  \"Looks like we don't have any podcasts that match your criteria (you must be super picky!).  Please try again and broaden your horizons.\",\n                imageUrl: require(\"./styles/assets/nounAngry.png\"),\n                imageWidth: 100,\n                confirmButtonText: \"Let me try again\",\n                padding: \"2rem\"\n              });\n            }\n        })  \n    }  \n\n    handleChange = (event) =>{\n        this.setState({\n            userInput: event.target.value\n        })\n    }\n\n    // Queries the Listen Podcast API for the 10 most recent podcast episodes\n    getRecentEpisodes = (e) => {\n        const podcastID = e.target.id;\n\n        axios({\n            url: `https://listen-api.listennotes.com/api/v2/podcasts/${podcastID}`,\n            method: `GET`,\n            headers: { \"X-ListenAPI-Key\": \"f1e31e292af446549bfbfebe744dd3ce\" },\n            dataResponse: `json`\n        }).then(data => {\n            const newEpisodes = [];\n\n            data.data.episodes.forEach((element, index) => {\n                if (index < 10) {\n                newEpisodes.push(element);\n\n                this.setState({\n                    episodeList: newEpisodes\n                });\n\n                } ;\n            });\n        });\n    }\n\n    closeEpisodeList = () => {\n        this.setState({\n            episodeList: \"\"\n        });\n    };\n\n    totalTime = (seconds)=>{\n        const hours = Math.floor(seconds/3600);\n        const minutes = Math.round((seconds %= 3600)/60);\n        if(hours > 0){\n            return `${hours} h ${minutes} min`\n        }else{\n            return `${minutes} min`\n        }\n    };\n\n    showMore = (e, index) =>{\n        document.getElementById(`PodcastCard__description--${index}`).classList.toggle(\"PodcastCard__description--snippet\")\n\n        if(e.target.innerHTML === \"... Show more\"){\n            e.target.innerHTML = \"... Show less\"\n        }else{\n            e.target.innerHTML = \"... Show more\"\n        };\n    };\n\n    selectEpisode = (selectedEpisodeId, index) => {\n        let podcastLength = this.state.episodeList[index][\"audio_length_sec\"];\n\n        this.state.episodeList.map((episode) => {\n            if (episode.id === selectedEpisodeId) {\n                this.props.setPodcastTime(podcastLength);\n                this.props.selectedEpisodeProp(this.state.episodeList[index]);\n            };\n        });\n    };\n\n    //episode details\n    showDetails = (e, index) => {\n        document.getElementById(`EpisodeCard__description--${index}`).classList.remove(\"visuallyHidden\")\n        document.getElementById(`EpisodeCard__description--${index}`).setAttribute(\"open\", true)\n    }\n\n    closeDialog= (e, index) => {\n        document.getElementById(`EpisodeCard__description--${index}`).classList.add(\"visuallyHidden\")\n        document.getElementById(`EpisodeCard__description--${index}`).setAttribute(\"open\", false)\n    }\n\n    render() {\n        \n        return (\n        <section className=\"PodcastSearch\">\n            <div className=\"wrapper\">\n                <div className=\"PodcastSearch__introContent\">\n                <h2>Pick your Podcast</h2>\n                <p>\n                    Find an episode of a podcast to keep you entertained on your commute.\n                </p>\n            </div>\n\n            <form onSubmit={this.handleSubmit} className=\"PodcastSearch__form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search podcast\"\n                    onChange={this.handleChange}\n                    value={this.state.userInput}\n                    className=\"PodcastSearch__textInput\"\n                />\n\n                <button\n                    type=\"submit\"\n                    onSubmit={this.handleSubmit}\n                    className=\"PodcastSearch__submitButton\"\n                    onClick={this.closeEpisodeList}\n                >\n                    Submit\n                </button>\n            </form>\n\n            <section className=\"PodcastResults\">\n                {this.state.episodeList.length ? (\n                <button\n                    className=\"PodcastResults__button--back\"\n                    onClick={this.closeEpisodeList}\n                >\n                    <span className=\"visuallyHidden\">\n                        Click here to go back\n                    </span>\n                    <i className=\"fas fa-arrow-left\" title=\"Go back\"></i>\n                </button>\n                ) : null}\n\n                <ul className=\"PodcastResults__list\">\n                    {!this.state.episodeList.length\n                        ? this.state.podcastList.map((podcast, index) => {\n                            return (\n                            <li className=\"PodcastResults__item\" key={podcast.id}>\n                                <div>\n                                    <img\n                                        src={podcast.thumbnail}\n                                        alt={podcast.title_original}\n                                        className=\"PodcastCard__image\"\n                                        id={podcast.id}\n                                        onClick={this.getRecentEpisodes}\n                                        />\n                                    <button\n                                        id={podcast.id}\n                                        onClick={this.getRecentEpisodes}\n                                        className=\"PodcastCard__button\"\n                                        >\n                                        Episodes\n                                    </button>\n                                </div>\n                                <div className=\"PodcastCard__text\">\n                                    <h2 className=\"PodcastCard__title\">\n                                        {podcast.title_original.split(\"|\")[0]}\n                                    </h2>\n                                    <p\n                                    className=\"PodcastCard__description PodcastCard__description--snippet\"\n                                    id={`PodcastCard__description--${index}`}\n                                    >\n                                    {podcast.description_original}\n                                    </p>\n        \n                                    {\n                                    (podcast.description_original.length > 450)\n                                    ?\n                                    <button \n                                        className=\"PodcastCard__button--showMore\"\n                                        onClick={(e)=>{this.showMore(e, index)}}>\n                                        ... Show more\n                                    </button>\n                                    : null\n                                    }\n                                </div>\n                            </li>\n                            );\n                        })\n                    : this.state.episodeList.map((episode, index) => {  \n                        return (\n                        <li\n                            key={episode.id}\n                            className=\"EpisodeResults__item\"\n                            ref=\"singleEpisode\"\n                        >\n                            <img\n                                src={episode.thumbnail}\n                                alt={episode.title}\n                                className=\"PodcastCard__image\"\n                            />\n                            <div>\n                                <h2 className=\"PodcastCard__title\">\n                                {episode.title}\n                                </h2>\n                                <dialog\n                                className=\"visuallyHidden\"\n                                id={`EpisodeCard__description--${index}`}\n                                >\n                                    <div className=\"EpisodeCard__titleBar\">\n                                        <p>{episode.title}</p>\n                                        <button\n                                        className=\"EpisodeCard__closeDialog\"\n                                        onClick={e => {\n                                            this.closeDialog(e, index);\n                                        }}\n                                    >\n                                        x\n                                        </button>\n                                    </div>\n                                    <div\n                                        dangerouslySetInnerHTML={{\n                                        __html: episode.description\n                                        }}\n                                        className=\"EpisodeCard__description\"\n                                    />\n                                </dialog>\n                                <div className=\"EpisodeCard__options\">\n                                    <div className=\"EpisodeCard__options--container\">\n                                        <button\n                                        className=\"EpisodeCard__options--listen\"\n                                        onClick={() => this.selectEpisode(episode.id, index)}\n                                        >\n                                        <i className=\"fas fa-headphones-alt\"></i> Listen\n                                        </button>\n                                        <p className=\"EpisodeCard__options--audioLength\">\n                                        {this.totalTime(episode.audio_length_sec)}\n                                        </p>\n                                    </div>\n                                    <button\n                                    className=\"EpisodeCard__options--details\"\n                                    onClick={e => {\n                                        this.showDetails(e, index);\n                                    }}\n                                    >\n                                    Details\n                                    </button>\n                                </div>\n                            </div>\n                        </li>\n                        );\n                    })}\n                </ul>\n            </section>\n        </div>\n        </section>\n        );\n    }\n}\n\nexport default Podcast","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport cyclist from \"./styles/assets/cyclist.png\";\nimport pedestrian from \"./styles/assets/pedestrian.png\";\n\nclass ComparisonResults extends Component {\n  readableTime = seconds => {\n    const readableMinutes = (seconds, suffix = \"s\") => {\n      const minutes = Math.round(Math.abs(seconds) / 60);\n      return `${minutes > 60 ? minutes % 60 : minutes} minute${\n        minutes !== 1 ? suffix : \"\"\n      }`;\n    };\n\n    const readableHours = (seconds, suffix = \"s \") => {\n      const hours = Math.floor(Math.abs(seconds) / 3600);\n      return hours ? `${hours} hour${hours !== 1 ? suffix : \" \"}` : \"\";\n    };\n\n    return `${readableHours(seconds)}${readableMinutes(seconds)}`;\n  };\n\n  render() {\n    const { results, closeResultsProp } = this.props;\n    const { podcastTime, bikingTime, walkingTime, map } = results;\n\n    // Adds the '--selected' modifier to the transportation method that's closest to the travel time\n    function transportSuggestion(transportationMethod) {\n      // Map the classnames that will be output onto the element\n      const allTransportMethods = {\n        cycling: \"ComparisonResults__option\",\n        pedestrian: \"ComparisonResults__option\"\n      };\n\n      if (\n        Math.abs(podcastTime - walkingTime) > Math.abs(podcastTime - bikingTime)\n      ) {\n        allTransportMethods.cycling =\n          \"ComparisonResults__option ComparisonResults__option--selected\";\n      } else {\n        allTransportMethods.pedestrian =\n          \"ComparisonResults__option ComparisonResults__option--selected\";\n      }\n\n      // Return the appropriate classnames\n      return allTransportMethods[transportationMethod];\n    }\n\n    // Takes the travel time and compares it to the podcast length\n    const printTimeDifference = transportMethod => {\n      const timeDifference = transportMethod - podcastTime;\n\n      if (transportMethod === podcastTime) {\n        return (\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--exact\">\n            EXACT MATCH\n          </span>\n        );\n      } else if (timeDifference < 0) {\n        return (\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--lower\">\n            -{this.readableTime(timeDifference)}\n          </span>\n        );\n      } else {\n        return (\n          <span className=\"ComparisonResults__timeDifference ComparisonResults__timeDifference--higher\">\n            +{this.readableTime(timeDifference)}\n          </span>\n        );\n      }\n    };\n\n    return (\n      <>\n        <CSSTransition\n          in={podcastTime ? true : false}\n          timeout={400}\n          classNames=\"show-modal\"\n          component={null}\n          mountOnEnter\n          unmountOnExit\n        >\n          <div className=\"ModalContainer\">\n            <section className=\"ComparisonResults\">\n              <div className=\"wrapper\">\n                <button\n                  aria-label=\"close modal\"\n                  className=\"ComparisonResults__button--close\"\n                  onClick={closeResultsProp}\n                >\n                  Close\n                </button>\n\n                <h2 className=\"ComparisonResults__heading\">\n                  You should{\" \"}\n                  {Math.abs(podcastTime - walkingTime) >\n                  Math.abs(podcastTime - bikingTime)\n                    ? \"cycle\"\n                    : \"walk\"}\n                </h2>\n\n                <section className=\"ComparisonResults__options\">\n                  <div className={transportSuggestion(\"cycling\")}>\n                    <img\n                      className=\"ComparisonResults__icon\"\n                      src={cyclist}\n                      alt=\"A cyclist\"\n                    />\n                    {printTimeDifference(bikingTime)}\n                  </div>\n\n                  <div className=\"ComparisonResults__details\">\n                    <p>Podcast length: {this.readableTime(podcastTime)}</p>\n                    <p>Biking time: {this.readableTime(bikingTime)}</p>\n                    <p>Walking time: {this.readableTime(walkingTime)}</p>\n                  </div>\n\n                  <div className={transportSuggestion(\"pedestrian\")}>\n                    <img\n                      className=\"ComparisonResults__icon\"\n                      src={pedestrian}\n                      alt=\"A pedestrian\"\n                    />\n                    {printTimeDifference(walkingTime)}\n                  </div>\n                </section>\n\n                <section className=\"ComparisonResults__map\">\n                  <img src={map} alt=\"\" />\n                </section>\n\n                <p className=\"ComparisonResults__disclaimer\">\n                  We don't advise taking your life in your hands by biking and\n                  podcasting.\n                </p>\n              </div>\n            </section>\n          </div>\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default ComparisonResults;\n","import React, { Component } from \"react\";\nimport \"./styles/App.scss\";\n\nclass Footer extends Component {\n\n  render() {\n\n    \n    return (\n      <div className=\"Footer\">\n        <div className=\"wrapper\">\n            <p className=\"Footer__copy\">\n              Paths and Podcasts  |  Copyright 2019  |  Russell Bentulan, Alissa Cheng,\n              Corey Derouin and James Lewis\n            </p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// EXPORT ========================================\nexport default Footer;\n","import React, { Component } from 'react';\nimport Header from './Header'\nimport MapQuestSearch from './MapQuestSearch';\nimport Podcast from \"./Podcast\";\nimport ComparisonResults from './ComparisonResults';\nimport Footer from \"./Footer\";\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './styles/App.scss';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      mapQuestApiKey: \"uMDO6BJLrXNNrJI5BZ7A0tFS6AojdBjn\",\n      startAndEndLocations: {},\n      bikingTime: \"\",\n      walkingTime: \"\",\n      podcastTime: \"\",\n      podcastEpisode: {},\n      map: \"\"\n    };\n  };\n\n  setBikeTime = (returnedBikingTime) => {\n    this.setState({\n      bikingTime: returnedBikingTime,\n    })\n  }\n\n  setWalkTime = (returnedWalkingTime) => {\n    this.setState({\n      walkingTime: returnedWalkingTime,\n    });\n  }\n\n  setLocations = (locationObject) => {\n    this.setState({\n      startAndEndLocations: locationObject,\n    })\n  }\n\n  setPodcastTime = (returnedPodcastTime) => {\n    this.setState({\n      podcastTime: returnedPodcastTime,\n    })\n  }\n\n  selectedEpisode = (podcastEpisode) => {\n    this.setState({\n      podcastEpisode: podcastEpisode,\n    })\n  }\n\n  closeResults = () => {\n    this.setState({\n      podcastTime: \"\"\n    });\n  }\n\n  directionsMap = (userMap) => {\n    this.setState({\n      map: userMap\n    });\n  }\n\n  render(){\n    return (\n      <Router>\n        <Route path=\"/\" component={Header} />\n\n        <div className=\"Search__formArea\">\n          <MapQuestSearch\n            setLocationsProp={this.setLocations}\n            setBikeTimeProp={this.setBikeTime}\n            setWalkTimeProp={this.setWalkTime}\n            apiKey={this.state.mapQuestApiKey}\n            stateProp={this.state}\n            mapProp={this.directionsMap}\n          />\n  \n          { this.state.bikingTime ?\n            <Podcast\n              setPodcastTime={this.setPodcastTime}\n              selectedEpisodeProp={this.selectedEpisode}\n            />\n            : null }\n          \n  \n          { this.state.podcastEpisode ? \n          <ComparisonResults \n            results={this.state}\n            closeResultsProp={this.closeResults}\n          />\n          : null }\n        </div>\n\n        <Route path=\"/\" component={Footer}/>\n      </Router>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}